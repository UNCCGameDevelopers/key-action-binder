define(["require", "exports", './KeyActionBinder', './KeyboardAxisBinding', './GamepadAxisBinding'], function (require, exports, KeyActionBinder_1, KeyboardAxisBinding_1, GamepadAxisBinding_1) {
    /**
     * Information linking an axis to a binding, and its value
     */
    var Axis = (function () {
        // ================================================================================================================
        // CONSTRUCTOR ----------------------------------------------------------------------------------------------------
        function Axis(id) {
            this._id = id;
            this.keyboardBindings = [];
            this.gamepadAxisBindings = [];
            this.gamepadAxisValue = 0;
        }
        Axis.prototype.bind = function (p1, p2, p3, p4, p5) {
            if (typeof p1 === "number") {
                // Keyboard binding
                this.bindKeyboard(p1, p2, p3 == undefined ? KeyActionBinder_1.default.KeyLocations.ANY : p3, p4 == undefined ? KeyActionBinder_1.default.KeyLocations.ANY : p4, p5 == undefined ? 0.15 : p5);
            }
            else {
                // Gamepad binding
                this.bindGamepad(p1, p2 == undefined ? 0.2 : p2, p3 == undefined ? KeyActionBinder_1.default.GamepadLocations.ANY : p3);
            }
            return this;
        };
        Axis.prototype.interpretKeyDown = function (keyCode, keyLocation) {
            for (var i = 0; i < this.keyboardBindings.length; i++) {
                if (this.keyboardBindings[i].matchesKeyboardKeyStart(keyCode, keyLocation)) {
                    this.keyboardBindings[i].value = -1;
                }
                else if (this.keyboardBindings[i].matchesKeyboardKeyEnd(keyCode, keyLocation)) {
                    this.keyboardBindings[i].value = 1;
                }
            }
        };
        Axis.prototype.interpretKeyUp = function (keyCode, keyLocation) {
            for (var i = 0; i < this.keyboardBindings.length; i++) {
                if (this.keyboardBindings[i].matchesKeyboardKeyStart(keyCode, keyLocation)) {
                    this.keyboardBindings[i].value = 0;
                }
                else if (this.keyboardBindings[i].matchesKeyboardKeyEnd(keyCode, keyLocation)) {
                    this.keyboardBindings[i].value = 0;
                }
            }
        };
        Axis.prototype.interpretGamepadAxis = function (axisCode, gamepadLocation, valueState) {
            for (var i = 0; i < this.gamepadAxisBindings.length; i++) {
                if (this.gamepadAxisBindings[i].matchesGamepadAxis(axisCode, gamepadLocation)) {
                    this.gamepadAxisBindings[i].value = valueState;
                }
            }
        };
        Object.defineProperty(Axis.prototype, "id", {
            // ================================================================================================================
            // ACCESSOR INTERFACE ---------------------------------------------------------------------------------------------
            get: function () {
                return this._id;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Axis.prototype, "value", {
            get: function () {
                // Gets the highest value
                var bestValue = 0;
                var val;
                // Check keyboard values
                for (var i = 0; i < this.keyboardBindings.length; i++) {
                    val = this.keyboardBindings[i].value;
                    if (Math.abs(val) > Math.abs(bestValue)) {
                        bestValue = val;
                    }
                }
                // Check gamepad values
                for (var i = 0; i < this.gamepadAxisBindings.length; i++) {
                    val = this.gamepadAxisBindings[i].value;
                    if (Math.abs(val) > Math.abs(bestValue)) {
                        bestValue = val;
                    }
                }
                return bestValue;
            },
            enumerable: true,
            configurable: true
        });
        // ================================================================================================================
        // PRIVATE INTERFACE ----------------------------------------------------------------------------------------------
        Axis.prototype.bindKeyboard = function (keyCodeA, keyCodeB, keyLocationA, keyLocationB, transitionTimeSeconds) {
            // TODO: check if already present?
            this.keyboardBindings.push(new KeyboardAxisBinding_1.default(keyCodeA, keyCodeB, keyLocationA, keyLocationB, transitionTimeSeconds));
        };
        Axis.prototype.bindGamepad = function (axis, deadZone, gamepadLocation) {
            // TODO: check if already present?
            this.gamepadAxisBindings.push(new GamepadAxisBinding_1.default(axis.index, deadZone, gamepadLocation));
        };
        return Axis;
    })();
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.default = Axis;
});

//# sourceMappingURL=data:application/json;base64,