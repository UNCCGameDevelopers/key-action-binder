import KeyActionBinder from './KeyActionBinder';
import KeyboardAxisBinding from './KeyboardAxisBinding';
import GamepadAxisBinding from './GamepadAxisBinding';
/**
 * Information linking an axis to a binding, and its value
 */
export default class Axis {
    // ================================================================================================================
    // CONSTRUCTOR ----------------------------------------------------------------------------------------------------
    constructor(id) {
        this._id = id;
        this.keyboardBindings = [];
        this.gamepadAxisBindings = [];
        this.gamepadAxisValue = 0;
    }
    bind(p1, p2, p3, p4, p5) {
        if (typeof p1 === "number") {
            // Keyboard binding
            this.bindKeyboard(p1, p2, p3 == undefined ? KeyActionBinder.KeyLocations.ANY : p3, p4 == undefined ? KeyActionBinder.KeyLocations.ANY : p4, p5 == undefined ? 0.15 : p5);
        }
        else {
            // Gamepad binding
            this.bindGamepad(p1, p2 == undefined ? 0.2 : p2, p3 == undefined ? KeyActionBinder.GamepadLocations.ANY : p3);
        }
        return this;
    }
    interpretKeyDown(keyCode, keyLocation) {
        for (var i = 0; i < this.keyboardBindings.length; i++) {
            if (this.keyboardBindings[i].matchesKeyboardKeyStart(keyCode, keyLocation)) {
                this.keyboardBindings[i].value = -1;
            }
            else if (this.keyboardBindings[i].matchesKeyboardKeyEnd(keyCode, keyLocation)) {
                this.keyboardBindings[i].value = 1;
            }
        }
    }
    interpretKeyUp(keyCode, keyLocation) {
        for (var i = 0; i < this.keyboardBindings.length; i++) {
            if (this.keyboardBindings[i].matchesKeyboardKeyStart(keyCode, keyLocation)) {
                this.keyboardBindings[i].value = 0;
            }
            else if (this.keyboardBindings[i].matchesKeyboardKeyEnd(keyCode, keyLocation)) {
                this.keyboardBindings[i].value = 0;
            }
        }
    }
    interpretGamepadAxis(axisCode, gamepadLocation, valueState) {
        for (var i = 0; i < this.gamepadAxisBindings.length; i++) {
            if (this.gamepadAxisBindings[i].matchesGamepadAxis(axisCode, gamepadLocation)) {
                this.gamepadAxisBindings[i].value = valueState;
            }
        }
    }
    // ================================================================================================================
    // ACCESSOR INTERFACE ---------------------------------------------------------------------------------------------
    get id() {
        return this._id;
    }
    get value() {
        // Gets the highest value
        var bestValue = 0;
        var val;
        // Check keyboard values
        for (var i = 0; i < this.keyboardBindings.length; i++) {
            val = this.keyboardBindings[i].value;
            if (Math.abs(val) > Math.abs(bestValue)) {
                bestValue = val;
            }
        }
        // Check gamepad values
        for (var i = 0; i < this.gamepadAxisBindings.length; i++) {
            val = this.gamepadAxisBindings[i].value;
            if (Math.abs(val) > Math.abs(bestValue)) {
                bestValue = val;
            }
        }
        return bestValue;
    }
    // ================================================================================================================
    // PRIVATE INTERFACE ----------------------------------------------------------------------------------------------
    bindKeyboard(keyCodeA, keyCodeB, keyLocationA, keyLocationB, transitionTimeSeconds) {
        // TODO: check if already present?
        this.keyboardBindings.push(new KeyboardAxisBinding(keyCodeA, keyCodeB, keyLocationA, keyLocationB, transitionTimeSeconds));
    }
    bindGamepad(axis, deadZone, gamepadLocation) {
        // TODO: check if already present?
        this.gamepadAxisBindings.push(new GamepadAxisBinding(axis.index, deadZone, gamepadLocation));
    }
}

//# sourceMappingURL=data:application/json;base64,